<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>写作文档</title>
    <url>/2015/11/30/hello-world/</url>
    <content><![CDATA[<p>此 blog 是基于 Hexo 的二次开发。<br>部署在Github pages公开仓库上，访问速度可能较慢。免费的还要啥自行车。</p>
<span id="more"></span>
<hr>
<h3 id="关于评论和分享功能"><a href="#关于评论和分享功能" class="headerlink" title="关于评论和分享功能"></a>关于评论和分享功能</h3><p>评论功能时间线：</p>
<ol>
<li>接入 Valine 评论系统。</li>
<li>受漏洞攻击影响，更换评论系统为 Gitalk。</li>
<li>取消评论系统。<ul>
<li>想要查看或发布评论，需确保网络能正常访问 Github。</li>
<li>由于评论调用的是 Github 的 Issues 功能，参与评论后，有新评论也会邮件通知，不想收到通知需前往 Issues 页面取消通知，体验感较差。</li>
<li>仅作为个人记录，不做技术分享。</li>
</ul>
</li>
</ol>
<p>分享功能确实鸡肋，分享到微信实现起来简直太难，所以我也没有过多研究，甚至可以直接下掉该功能。(已下掉)</p>
<hr>
<h3 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h3><p><del>在github里建立一个代码仓库，然后用该仓库用作图床服务器存储。<br>具体流程：创建新仓库、生成token令牌、使用PicGo来实现图片上传（<a href="https://mirrors.sdu.edu.cn/github-release/Molunerfinn_PicGo/v2.3.1/">推荐山东大学镜像网站</a>）。<br>PicGo需配置仓库名、分支名、Token，可选存储路径与自定义域名，设置默认图床。</del></p>
<p>虽然大厂较为稳定，但国内访问速度很慢，已更新为<a href="https://imgse.com/">路过图床</a>。<br>14年开始维护的个人网站，免费图片上传。原图保存, 最大单张支持10 MB，全球CDN加速, 图片上传和外链服务较为高速稳定。</p>
<hr>
<h3 id="首页默认显示摘要"><a href="#首页默认显示摘要" class="headerlink" title="首页默认显示摘要"></a>首页默认显示摘要</h3><p>在写 Markdown 的时候自定义摘要文字：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">摘要...</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">正文...</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="文章封面图"><a href="#文章封面图" class="headerlink" title="文章封面图"></a>文章封面图</h3><p>基于css样式定义最好横图。需要写在 markdown 的 Front-matter 区域：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Post name</span><br><span class="line">photos: [</span><br><span class="line">        [&quot;img_url&quot;],</span><br><span class="line">        [&quot;img_url&quot;]</span><br><span class="line">        ]</span><br><span class="line">---      </span><br></pre></td></tr></table></figure>
<p>这里说的封面图并不是文章配图，文章配图按照 markdown 的语法写就好了！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![alt 属性文本](图片地址 &quot;可选标题&quot;)</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="文章置顶功能"><a href="#文章置顶功能" class="headerlink" title="文章置顶功能"></a>文章置顶功能</h3><p>安装。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>
<p>开启。<br>需要置顶文章的 Front-matter 区域加上 <code>top: ture</code> ，示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 新增文章置顶</span><br><span class="line">author: bigkaiwu</span><br><span class="line">top: ture</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>文档</category>
      </categories>
      <tags>
        <tag>Ocean</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>加密文章测试</title>
    <url>/2023/09/02/%E8%BF%99%E6%98%AF%E5%8A%A0%E5%AF%86%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码貌似不太对, 请再试试." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="5a3faddc82e58d87e91557227b6b8a9b13f97704a502bf8cdc9454891b4f1adf">4630436162ade97ba2718b7d0c4b3b6388d1d118da9c082a5a34fb7f3105852c2a6e0aafd7fa3a307805e19bced820c18ba7cdd7c2a8b3918cedbd9cbebba749</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码访问</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>年少不可得之物,终将困其一生</title>
    <url>/2023/06/17/%E5%B9%B4%E5%B0%91%E4%B8%8D%E5%8F%AF%E5%BE%97%E4%B9%8B%E7%89%A9-%E7%BB%88%E5%B0%86%E5%9B%B0%E5%85%B6%E4%B8%80%E7%94%9F/</url>
    <content><![CDATA[<p>近来，武念念总是说自己是个公主，想要各式各样的公主裙和水晶高跟鞋。</p>
<p>这让我想起来一个朋友。</p>
<span id="more"></span>
<p>她说：</p>
<p>“我小时候很喜欢吃路边经常叫卖的那种蜂蜜烤包，每次看到都会盯着那一排一排金灿灿的面包，但是我从来没有吃过，我长大了才终于尝到那个味道，好可惜，没有我想象中的好吃。”</p>
<p>这些都可以用一句话来概括：</p>
<p>“年少不可得之物，终将困其一生。”</p>
<p>“我小时候特别执着于漂亮的裙子，但是我妈妈从来没给我买过。因为在小学阶段，我发育的总是比同龄人还要快。这就导致了她觉得给我买裙子是一种浪费，因为我长的快。这么快就穿不了的衣服，有什么用呢？还不如买一堆灰扑扑的裤子，结实又耐穿。但是我不懂啊，每次路过那些展示着漂亮裙子的商店，我都会拖着妈妈不走。可是每次都是穿了，又不买。每次都是这样。</p>
<p>终于有一次，她恼了：“你长的这么快，买裙子顶个什么用啊!而且你也不看看你那样，又黑又壮，裙子也是要靠人衬的。”</p>
<p>这句话一度让我感到自卑，后来也理解了她。毕竟在那个时间，我们家的确很困难，每一分钱都要省下来的。在她的眼中，能吃能喝，能用的东西当然比裙子中虚而不实的东西值得。</p>
<p>谁都没有错，但她还是被那件裙子困住了一生。</p>
]]></content>
      <categories>
        <category>成长</category>
      </categories>
      <tags>
        <tag>成长</tag>
      </tags>
  </entry>
  <entry>
    <title>ShowMaker</title>
    <url>/2022/08/16/ShowMaker/</url>
    <content><![CDATA[<p>比赛结束后，我感觉头脑空白，但是，大家想一想，​失败总是贯穿人生始终，这就是人​生。但是像这样一直后悔下去就没完没了了，因为那都是过去的事了，我只是觉得可惜。</p>
<span id="more"></span>
<p>雨滴会存活下来，变成大海。</p>
<p>那一年的决赛是SSG对SKT，最终比分3-0，当时我看见FAKER颓坐在椅子上泣不成声，这个画面我永生难忘，那一刻我在想：如果我能成为职业选手，我一定要赢下所有。如今奖杯就在眼前我必须考虑这会不会是我此生仅有的机会，我相信LCK能有过去的霸主地位,FAKER功不可没。重铸LCK的荣光，我辈义不容辞！</p>
<p>人生最高兴的时候，我确实拿过一次全球总决赛冠军，大家可能觉得就是那个时候，但其实不是的，我从韩国非职业队伍进入LCK，那才是我最高兴的时候。</p>
]]></content>
      <categories>
        <category>随想</category>
      </categories>
      <tags>
        <tag>showmaker</tag>
      </tags>
  </entry>
  <entry>
    <title>好奇心真的会害死猫</title>
    <url>/2021/05/12/%E5%A5%BD%E5%A5%87%E5%BF%83%E7%9C%9F%E7%9A%84%E4%BC%9A%E5%AE%B3%E6%AD%BB%E7%8C%AB/</url>
    <content><![CDATA[<p>人类的好奇心真的会害死猫-“宠物盲盒”。</p>
<span id="more"></span>
<p>最近一段时间“盲盒”经济十分火热，利用的是消费者对不确定性的好奇心和惊喜感。然而没想到，有人居然用鲜活的宠物来做盲盒。</p>
<p>这样到底有多残忍？</p>
<p>“很多买家在打开箱子的时候，期待已久的活生生的小生命，已经在运输中闷死、饿死、憋死、热死、冷死，甚至是被盲盒中的其他小狗小猫咬死……”</p>
<p>用盲盒装动物，将一些人的快乐建立在动物痛苦甚至失去生命的基础上，是对人性的背离，也是娱乐的异化。</p>
]]></content>
      <categories>
        <category>新闻</category>
      </categories>
      <tags>
        <tag>宠物盲盒</tag>
      </tags>
  </entry>
  <entry>
    <title>你离开了南京，从此没有人和我说话</title>
    <url>/2018/12/24/%E4%BD%A0%E7%A6%BB%E5%BC%80%E4%BA%86%E5%8D%97%E4%BA%AC%EF%BC%8C%E5%86%8D%E4%B9%9F%E6%B2%A1%E4%BA%BA%E5%92%8C%E6%88%91%E8%AF%B4%E8%BF%87%E8%AF%9D/</url>
    <content><![CDATA[<p>《你离开了南京，从此没有人和我说话》是一首纯音乐，作者李志。于2005年12月25发表在专辑《梵高先生》中，是专辑的第一首曲子。</p>
<span id="more"></span>
<p>第一次听时应该是我高中毕业，不知道谁放了这首曲子，但那时我还并不在南京。</p>
<p>第一次听时感觉这曲子就像，你刚开始酝酿感情，眼眶湿润，眼泪快要落下的时候，忽然曲终人散，只留下空落落的自己，于是不得不强忍着把眼泪收回去。</p>
<p>据说这首曲子的出处是：多年前，李志曾经有过一个朋友，是至今为止，他认为在智商、信息和思想上和他完全对等的一个人。不久之后朋友要去上海，李志写了首歌，请这个朋友填词——那是李志唯一一次叫别人填词。朋友填不出来，李志也填不出来。最后，这首歌就成了一支乐曲，名叫《你离开了南京，从此没有人跟我说话》。</p>
<p>是啊，没有人和我说话，也就不需要词了。</p>
<p><img src="https://s1.ax1x.com/2023/08/26/pPNg9ld.jpg" alt="玄武湖"></p>
<p>大学毕业后，工作辗转来到南京。我走过以前憧憬的地方，触摸过这古老的城墙。在这座古老的城市里，法国梧桐充斥着每个街道，梧桐树已经成了南京城的标志之一，是南京文化的一部分。为何南京如此钟爱梧桐？</p>
<p>流传的最常见的版本是：传说当年宋美玲特别喜欢法国梧桐，老蒋爱妻心切，特意从法国引进两万棵梧桐树种，从美龄宫一路种到中山北路，种成一串宝石项链，送给爱人做礼物。</p>
<p>想来老蒋也是个痴情种子，毕竟能做出这番浪漫之举的男人是不多见的。这也是我们常说的因为一个人，恋上一座城吧。</p>
<p>记得有一次在三山街地铁口，遇见一个卖栀子花的老太太，满头银发，一口苏白。和她闲聊 “阿婆，年纪这么大了干什么还出来卖花啊，多辛苦”， “哎呦，你不懂，今生卖花，来世漂亮”。</p>
<p>但是，南京啊，热河路老建筑都已经拆了，山阴路也没有了八楼的房间，先锋书店卖的也都是其他书店能买到的书，南京，也不过是一座再普通不过的城市了。</p>
<p>只不过是每一个在南京呆过的人，心中都有一个属于自己的南京而已。</p>
<p>“南京，九十七路上的心情，一路向西，以为那是旅行。”南游记乐队在《你不在南京》中这样唱。</p>
<p>仙林在南京东北部，是南京很大的大学城，属于南京栖霞区。栖霞山离得很近，每到秋天枫叶红绿交错。九十七路从这里发车，一路向西直达南京站，每到放假前后都会有无数的学生到来或离开，在车站送走或等待自己想念的人，这路公交见证过无数的重逢欣喜和最后告别。</p>
<p>祝你逃过随风而动的浮萍，活的永远像个孩子。</p>
]]></content>
      <categories>
        <category>随想</category>
      </categories>
      <tags>
        <tag>南京</tag>
      </tags>
  </entry>
  <entry>
    <title>从Vuejs看近年来前端开发趋势</title>
    <url>/2018/09/09/%E4%BB%8EVuejs%E7%9C%8B%E8%BF%91%E5%B9%B4%E6%9D%A5%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%B6%8B%E5%8A%BF/</url>
    <content><![CDATA[<p>Vuejs的产生背景得益于近年来前端开发趋势的变化。</p>
<p>1.旧浏览器逐渐淘汰，移动端需求增加。</p>
<span id="more"></span>

<p>旧浏览器通常指IE6-IE8，并不支持ES5特性 ，而Vuejs的核心实现就是利用了es5的Object.defineproperty的特性。而IE9+，Chrome，safari，firefox这些浏览器对ES5特性是完全支持的。而移动端大部分浏览器都是基于webkit内核，ES5在移动端也是全面支持的，因此Vue可以在移动端和一些pc端的高端浏览器大显身手。</p>
<p>2.前端交互越来越多，功能越来越复杂。</p>
<p>现如今，前端包罗万象，产品形态五花八门涉及广，可以是一些高大上的技术库和框架，酷炫的运营活动页面，甚至是好玩的H5小游戏，不过这些一两个文件的小项目并不是前端应用的主要应用场景，更具商业价值的是复杂的web应用，它们功能完善，页面繁多，为用户提供了完整的交互体验。即我们常见的新闻趣味站，在线购物平台，社交网络，金融信贷应用，音乐互动社区，视屏分享平台，打车出行平台等。这些网站或平台的特点就是交互多，功能复杂。</p>
<p><img src="https://s1.ax1x.com/2023/08/26/pPN2PCF.png" alt="vue"></p>
<p>3.架构从传统后台MVC向REST API+前端mv*迁移</p>
<p>传统的后台mvc方式是当前前端和后端发生数据交互时刷新整个页面，这样的用户体验是非常差的，因此我们通过ajax的方式和后端REST API做通讯，异步刷新页面的某个区块，来提升体验，同时，把mv*拿到前端来做。</p>
<p>因此这些趋势变化会对前端产生一些新的需求，我们希望前端有良好的组织架构，前端的代码量和对前端代码开发的效率和可维护性都有了一定的要求，vuejs的产生就是为了解决这些问题。</p>
<p>mv*:mvc&#x2F;mvp&#x2F;mvvc(vue.js)</p>
<p>mvvm应用场景：</p>
<p>针对具有复杂交互逻辑的前端应用</p>
<p>提供基础的架构抽象</p>
<p>通过Ajax数据持久化，保证前端用户体验</p>
<p>当前端进行数据操作的时候，可以通过ajax请求对后端做数据持久化，不需要刷新整个页面，只需要改动dom需要改动部分的内容。特别是移动端应用场景，刷新整个页面的代价太昂贵，会重新加载很多资源。虽然有些资源会被缓存，但是页面的dom，js，css都会被浏览器重新解析一遍，因此移动端页面通常被做成spa单页面应用。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>十年一觉扬州梦</title>
    <url>/2018/08/27/%E5%8D%81%E5%B9%B4%E4%B8%80%E8%A7%89%E6%89%AC%E5%B7%9E%E6%A2%A6/</url>
    <content><![CDATA[<p>近几天有点感冒，在公司中午午睡时翻来覆去总是觉得难受，恍恍惚惚间莫名想起了一句诗，“十年一觉扬州梦”。</p>
<p>于是，我又想起了龙哥。</p>
<span id="more"></span>

<p>那是我还在读大学时期的一个6月，我还在合肥，龙哥也还在马鞍山。决定出行时，本意是去武汉，然后种种因素遂未成行，然而又不愿作罢，于是我们先去了合肥的明光汽车站，在汽车站里，盯着票务滚动的大屏幕，决定随机挑选去哪，最后我说烟花三月下扬州，于是，我们在那个三月的翻倍——六月，坐上了一辆小巴，晃晃悠悠的开往了扬州。</p>
<p>当天到达扬州汽车站时，已经是下午，我们又面临了一项选择。坐哪个公交，去哪个地方。有时我想，正是因为有了这些说走就走的悸动，才让生活多了许多的不确定性，才足以让我们刻骨铭心。后来因为我对其他的大学总是很憧憬，于是，我们先前往扬州大学。</p>
<p>具体去的，应该是扬州大的瘦西湖校区，因为我对扬州能想起来的，也只有个瘦西湖。为了第二天方便一点，我们只得先去附近。</p>
<p>我们从扬州大学出来后，天色已晚，于是我们在附近租了个80一晚的大床房，在宾馆老板的指导下，我们去了东关街。</p>
<p>东关街算是一条比较出名的步行街，但对于我和龙哥这种出门穷游的人，就显得不是很友好。当你走进去时，形形色色、琳琅满目的商品，小吃充斥着整个街道，让你左右为难。买也不是，不买也不是。</p>
<p>因为我经常喜欢跑出去玩，就和爸妈探讨过这个问题。我爸说旅游是有钱人干的事，你有钱想去哪去哪，想玩什么玩什么，想吃什么吃什么，你天天这么跑，就是给火车攒个油钱。</p>
<p>我心里觉得在理，毕竟我是个可以走过十里步行街，不买一样东西的人。但嘴上仍然反驳他，读万卷书不如行万里路，你总要去外边看看人家的风土人情。</p>
<p>他又说，人家本地的人根本都不想去的地方，你们还硬着头皮人挤人的跑去，说着说着多说无益，我便不再理他。</p>
<p>第二天我们去了瘦西湖，现在能想起的东西也屈指可数，明明过去的时间并不长，却总是很快地遗忘。现在我想，也许我爸说的是对的，当时满心欢喜的要跑去外面的世界，总觉得要多去点地方才可以，可现在去过的地方仔细回想，竟也只能断断续续的想起来零星碎片。</p>
<p>顿时开始怀疑旅行的意义。</p>
<p>是啊，十年一觉扬州梦。</p>
<p>杜牧在《遣怀》中写</p>
<p>落魄江湖载酒行，楚腰纤细掌中轻。</p>
<p>十年一觉扬州梦，赢得青楼薄幸名。</p>
<p>杜牧感叹扬州十年载酒行乐，倚红偎翠，纵情声色，一事无成。恍如一场梦幻，纵欲醒悟回头，反而在青楼馆中落得一个薄情郎的名声。不怨青楼之萍絮无情，而反躬自嗟其薄幸。</p>
<p>爸爸在老家有一颗橘子树，是一几年春节前从后院邻居家里挖出来放在缸里我和他一起抬回去的。刚抬回来时，爸爸很担心他活不过那个冬天，于是又让我帮忙把缸抬进了屋里，悉心照料。后来，爸爸又陆陆续续的在缸里面放了莲藕，又听人说泥鳅活土，于是又抓了几条泥鳅放了进去。第二年，莲藕开出绿叶浮在缸外面，泥鳅在叶子下面吐泡泡，橘子也结出好多。</p>
<p>嗯，就这样。</p>
]]></content>
      <categories>
        <category>随想</category>
      </categories>
      <tags>
        <tag>扬州</tag>
      </tags>
  </entry>
  <entry>
    <title>看不见风景的西安</title>
    <url>/2018/08/22/%E7%9C%8B%E4%B8%8D%E8%A7%81%E9%A3%8E%E6%99%AF%E7%9A%84%E8%A5%BF%E5%AE%89/</url>
    <content><![CDATA[<p>西安，以前一直默默无闻，现在被抖音上摔碗、吃毛笔、白鹿原、大雁塔等等带火了，这让我想起来，我也是去过西安的。</p>
<span id="more"></span>
<p>确切的日子已记不得，不过应该是好几年前暑假某个热的发慌的下午，龙哥说我们出去玩吧，我说好。龙哥说去哪，我说不知道。龙哥说去西安吧，我说好。于是，我们挂了电话，我收拾了几件衣服，龙哥就骑着他那个破的我都感觉不能骑的摩托车到了我家，于是我们订了那个晚上的火车，开始了这场说走就走的旅行。</p>
<p>说是旅行，更感觉像是穷游，那时的我们还没有什么钱，做什么都不得不考虑资金。我和龙哥去过很多地方，都是穷游，却也开心。我们曾走过扬州的小吃街，从头走到尾没买一口吃的。也曾挤在几十块一晚的廉价宾馆里，龙哥的呼噜声震天，这让我很是难受。这也是我们坐夜车的原因，因为可以省下住一晚宾馆的钱。</p>
<p>夜幕降临，大地慵懒舒张，列车带着疲倦的你飞驰。车厢的灯突然熄灭，整个世界瞬间消失，只有车轮与铁轨的起伏，风的延伸，只有速度。你丧失了几乎所有的感觉，在漆黑的飞翔里，除了速度。你知道它把你带向远方。终点是清楚的，但过程往往迷惘。这让我突然想起来我应该是对西安有所迷恋的。西安，古称长安，只长安这两个字便让人觉得有这浓重的历史气息。“一座城市的历史就是一个民族的历史”，长安，这座中国历史文化的首善之都，以世代传承的雍容儒雅，满腹经纶，成为中国历史的底片。</p>
<p>我曾在诗句中多次遇见长安，“春风得意马蹄疾，一日看尽长安花”。“长安古道马迟迟，高柳乱蝉嘶。夕阳鸟外，秋风原上，目断四天垂”。“何处是长安，湿云吹雨寒。”有春风得意，有借史怀古，有繁荣，有凄凉，这让我很是憧憬这座古城应有的样子。</p>
<p>凌晨五点多的时候，我们到达西安。这座古城还未苏醒，便被夏季凌晨热辣的阳光笼罩了。因为提前和猛哥说了来接我们，猛哥又在一个很远的大学，所以我们只得在火车站附近转悠等他。</p>
<p>我们在火车站看了地图，穿过几个破旧的巷子，要去一个车站边下的遗址。不知道为什么，没有新兴高铁站的光鲜亮丽，好像所有的火车站附近总是给人一种很破旧的感觉，我们穿过巷子，到处都是撑着的竹竿，上面晾晒着衣服，有的还在滴水，从底下路过，水滴簌簌的落下来。有的老人已经坐着马扎在聊天，卖早点的小店冒着热气。有的人刚起来，光着膀子站在门口刷牙洗脸。从门缝里望进去，屋内很小，满是东西，阴暗潮湿。你望着他，他也望着你，目光呆滞，没有一丝生气，让你不敢再去看他。</p>
<p>我们随便吃了点东西，很快就到了那个我已说不上名字的遗址，只记得入口处有一个高高竖起的石碑，然后龙哥让我给他照相，于是我拿着来时路过县城从高中语文老师那借来的照相机，呆呆的看着他摆着姿势，给他照完。我高中的语文老师名字叫杨惠，是个温柔婉约，喜欢文字，仿佛从书中走出来的女子。我感觉她高中三年都是很喜欢我的，因为我那时我的数学物理说起来不是很好，只得靠着语文英语名列前茅苦苦支撑。那时也喜欢和龙哥一样写点东西。平时写的作文或者其他东西也总是被她拿来在全班同学面前诵读。同学们便认为我是个有文采的人，我到现在也不知道文采究竟是个什么东西。只是那个在我青春里给我鼓舞的语文老师，现在已育有双子，想来也算是面朝大海，春暖花开了。</p>
<p>我们在那个遗址逗留了一个多小时，猛哥才姗姗来到。然后我们坐地铁到了某个地方，下车去找午饭。西安的面食占了很大部分比例，这让我这个平时不喜欢吃面的人不得不妥协。我们下车后又进了一条巷子，巷子里从头到尾充斥着各种面食，我们选了一家，里面没有空调，只有风扇吱呀吱呀的在转。于是我们不得不又一人要了瓶冰啤酒来缓解内心的燥热。</p>
<p>吃完后。我们直接去了大雁塔附近，因为正值当午，阳光火辣，我们只得先在附近的一个商场坐了很长一段时间。夜幕降临时，我们又重新出来，附近熙熙攘攘，大多数是像我们一样过来欣赏这座城市的底蕴，也有当地附近的人吃了饭来这边溜达。这两种人很容易分清，前者脸上写满了好奇，后者脸上看不到一丝神情，一切都已司空见惯。从诞生在这片土地上，他们走过了很多年月，这中间无数的时光足以让这些归于平淡。</p>
<p>我们先在大雁塔入口处照了几张照片，然后转了一圈到大雁塔底下，等待着广场的喷泉表演。这时等待的人已经很多了，我们已经很难再挤到前排，只得找个侧边看着。表演开始后，各种手机，照相机被举的很高，人们都想记录下这个瞬间，证明我曾来过这片土地。我们也拍了照片，照相机的镜头被喷泉的水打湿，照片上会出现星星点点的水迹。现在这些照片静静的躺在qq空间里，看起来画质很模糊，脸庞的笑看起来也很稚嫩。我们习惯把这些称之为青春。然后多年后我们把这个夏天称之为那个夏天。</p>
<p>从大雁塔小雁塔离开时已经很晚，我们坐车到了猛哥学校，在附近找了家宾馆，只有一张床，几十块一晚。我们草草的洗了个澡，昨夜火车上的疲倦和今天积攒的睡意逐渐涌上来，就这样，我们度过了在西安的第一夜。</p>
<p>第二天起来已是接近中午，猛哥带着他女朋友从学校里过来找我们，然后一起在附近吃了个饭。没记错的话，应该是个很便宜的自助火锅，19还是29一个人。吃完之后刚好阳光正烈，我们便找了一家网吧呆了两个小时。出来后猛哥说要面试一家兼职，她女朋友回学校了，我们便一同前往。</p>
<p>面试完后，我们去了大唐不夜城，当时还未入夜，小彩灯什么的并没亮起来，逛了一圈并不好玩，于是离开去大唐芙蓉园。芙蓉园正门是要收门票的，当时80块一人。我们不舍得进，这时夜幕刚好降临，于是便从正门离开，想着从哪里翻进去，逛了一圈，我们到了一个小栅栏，里面时不时的有保安经过。掐好点之后，感觉差不多了，我们便一拥而上，刚从栅栏上跳下来时，便被保安发现了。于是我们便分头跑，我跑了很久，停下来，面前是一个湖，我在湖边坐了一会，给龙哥打电话。龙哥在电话那头说我们俩被抓住了，补了门票。你一会见到我们一定要假装不认识我们。现在想来还是很想笑。于是在遇见他们后，我在他们后面跟了一会，随即还是一起走了，毕竟一个人还是寂寞的。</p>
<p>从里面出来后，我不知道是该庆幸还是该怎么样，悻悻的跟着猛哥又回到了他们学校附近。然后我们说自己找地方住，让猛哥先回学校了。然后我和龙哥又跑到了中午上的那家网吧，中午50块钱开的会员，钱还没有上完。我们需要把钱上完来让自己感觉不亏。但是我们在网吧呆了一夜，直到现在，卡里的钱还是没有上完。我和龙哥以前是很爱上网的人，我们曾在网吧里待过连续一个星期，饿了出来吃饭，吃完再回去，困了躺着睡，醒了继续上。我们是那种走到哪里网吧会员开到哪里的人。</p>
<p>第二天，本来是要去兵马俑还是哪里的，因为远，也因为我们在网吧呆了一夜，遂未成行。于是，那天下午，我们踏上了回家的火车。西安之行也就此落下帷幕。有时候我想我们是的确去过西安的，有时候我又想我还没有去过西安。西安也和我想象中一样，却又和我想象中不一样。我在这里看到了许多风景，我在这里也什么风景都没看到。</p>
<p>你现在坐在也是古城南京的一栋办公楼里，表情沉默。</p>
<p>你告诉自己，世界很小，旅途很长，天南地北不远，自由的夏天不远。你会再次上路。</p>
]]></content>
      <categories>
        <category>随想</category>
      </categories>
      <tags>
        <tag>西安</tag>
        <tag>旅游</tag>
      </tags>
  </entry>
  <entry>
    <title>关于SPA</title>
    <url>/2018/07/23/%E5%85%B3%E4%BA%8ESPA/</url>
    <content><![CDATA[<h3 id="单页面应用程序（即-Single-page-App，简称-SPA）"><a href="#单页面应用程序（即-Single-page-App，简称-SPA）" class="headerlink" title="单页面应用程序（即 Single-page App，简称 SPA）"></a>单页面应用程序（即 Single-page App，简称 SPA）</h3><p>现如今，网页开发人员不再把所开发的产品叫做网站，而是叫做网页应用。虽然二者没有严格区分，但后者的交互性和动态性更强，能让用户自行操作并且收到特定回应。</p>
<span id="more"></span>

<p>以前，浏览器会收到来自服务器的 HTML。当用户访问另一个 URL 地址时，需要全页刷新，服务器也会发送全新 HTML。这就是所谓的服务器端渲染。</p>
<p>但是，在现代 SPA 中，客户端渲染已经取代了服务器端渲染。浏览器会先从服务器上加载出最初图像，和包括框架、库和应用代码在内的脚本，以及整个应用所需的样式表。当用户访问其他页面时，页面将不会进行整体刷新，而是通过 HTML5 History API 对页面地址进行更新。以 JSON 形式呈现出来的新页面所需的新数据，将会通过向服务器发出的 AJAX 请求，由浏览器检索进行检索。接着，SPA 会通过原先在页面中下载好的 JavaScript，来对页面数据进行动态更新。</p>
<h3 id="SPA-的优点"><a href="#SPA-的优点" class="headerlink" title="SPA 的优点"></a>SPA 的优点</h3><p>1.应用针对用户操作给出的反应更加灵敏，不会由于页面整体刷新而出现闪退；</p>
<p>2.向服务器发送的 HTTP 请求减少，无需在每一页进行重复下载；</p>
<p>3.用户和服务器划分明确，无需修改服务器代码就可以轻松为新用户创建不同平台。另外，只要不违背 API 规则，还可以分别对用户和服务器的技术堆栈进行修改。</p>
<h3 id="SPA-的缺点"><a href="#SPA-的缺点" class="headerlink" title="SPA 的缺点"></a>SPA 的缺点</h3><p>1.最开始的加载任务较重，包括框架和应用代码等；</p>
<p>2.需要对服务器进行额外的配置操作，让它将所有请求汇集到同一个进入点；</p>
<p>3.SPA 依靠 JavaScript 来呈现内容，但并不是所有搜索引擎都能够在爬虫过程中执行 JavaScript。这一点，无疑会对应用的搜索引擎优化带来负面影响。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>SPA</tag>
      </tags>
  </entry>
  <entry>
    <title>使用纯css实现google Photos照片列表布局</title>
    <url>/2017/03/27/%E4%BD%BF%E7%94%A8%E7%BA%AFcss%E5%AE%9E%E7%8E%B0google%20Photos%E7%85%A7%E7%89%87%E5%88%97%E8%A1%A8%E5%B8%83%E5%B1%80/</url>
    <content><![CDATA[<p>文章很长，因为介绍了如何一步一步进化到最后接近完美的效果的，建议顺序读下去，因为后面的原理需要前面的内容做为铺垫，主要是在处理边角问题上。</p>
<span id="more"></span>
<p>好了，正文开始。<br>开始之前，先对比一下三种比较常见的图片布局的差异</p>
<p>1.花瓣：</p>
<ul>
<li>此种布局为比较常见的等宽布局，所有图片的宽度是一样的</li>
<li>由于图片是等比拉伸（等比拉伸的意思是图片的宽和高变化相同的比例，也就是图片展示的宽高比与原始宽高比一致），而每张图片的宽度又是一样的，所以图片的高度就必然不一样了</li>
<li>这种布局的缺点是，由于每张图片展示的高度的不一致，图片不是按一般的阅读顺序展示的，因为可能连续的多张图片顶部的高度不一样，而人眼又习惯于水平扫描，所以用户就有可能漏看某些照片</li>
<li>图片瀑布的底部一般是对不齐的</li>
<li>虽然底部很难完全对齐，但使用 JS 对图片顺序进行重排能够让底部尽量对齐，所以此种布局在 reflow 的时候（比如resize，zoom）必然要有 JS 的参与</li>
</ul>
<p>2.Google Photos，500px，图虫等，以 Google Photos 为代表的即不等宽也不等高的图片布局有如下特点：</p>
<ul>
<li>图片也没有被非等比拉伸</li>
<li>每行的图片在水平方向上也占满了屏幕，没有多余的空白</li>
<li>因为以上两个条件，所以每行的图片高度必然会不一样，否则无法做到图片在水平方向上占满屏幕</li>
<li>图片是按顺序展示的，比较符合人眼阅读顺序，Google Photos 因为照片有拍摄时间这个属性，必须满足这个条件</li>
<li>底部是对齐的</li>
<li>Google Photos 的布局中，当某几个日期的照片太少时，多个日期的照片会合并展示在同一行，当然这不是本文讨论的重点</li>
</ul>
<p>3.Instangram</p>
<ul>
<li>正方形图片布局，就不多说了。。。</li>
</ul>
<p>以上介绍的前两种布局都有一个共同点，那就是图片没有经过非等比拉伸，也就是说图片里的内容没有变形，也没有被裁剪，只是放大或者缩小，这是目前图片类应用在展示图片上的一个趋势，应该说，很少有专做图片的网站会把照片非等比拉伸显示（变形拉伸真的给人一种杀马特的感觉。。。），最次的也就是把图片等比拉伸后展示在一个正方形的区域里，类似于正方形容器的 background-size: cover; 的效果。</p>
<p>另外，在花瓣的布局中，比较宽的图片展示区域会比较小；而在第二种布局中，则是比较高的图片展示区域会比较小。</p>
<p>但是，在第一种布局中，因为宽度是定死了的，所以高宽比小到一定程度的图片，显示区域会非常小。而在第二种布局中，因为不同行的高度是不一样的，如果比较高的图片出现在比较高的行，还是有可能展示的稍大些的。</p>
<p>总体来说，以 Google Photos 为代表的图片布局，在显示效果上更优。关于如何使用 JS 来完成 Google Photos &#x2F; 500px 布局的算法，这里就不讨论了，读者可以自己思考一下~</p>
<p>下面根据上面的分析稍微总结一下评判图片布局优劣的一些标准：</p>
<ol>
<li>是否能尽量按原始列表中的顺序输出</li>
<li>能否按人眼的扫描顺序输出，即行高相同</li>
<li>图片能否按照原始比例展示，或者尽量按原始比例展示</li>
<li>每张图片的展示面积能否尽量接近，实际上在想完全展示照片的布局中，这一条是很难达成的</li>
<li>图片不被非等比拉伸，内容不变形，内容展示完全</li>
</ol>
<p>第一次看到类似 Google Photos 照片列表的布局已经不记得是在哪里了，当时只是觉得这种布局肯定需要 JS 参与，因为每行图片高度相同的情况下不可能那么恰到好处的在容器两端对齐，且所有图片之间的间距大小也一样(如果间距大小不一样但两端对齐，可以使用 inline 的图片加上 text-justify 来实现，在图片较小的时候(比如搜索引擎的图片结果)也不失为一种选择)，通过观察，发现每行的高度并不相同，就确认了必然需要 JS 参与才能完成那样的布局。</p>
<p>然而当越来越多的开始网站使用这样的布局时，做为一个热衷于能用 CSS 实现就不用 JS 的前端工程师，我就在考虑，能否仅用 CSS 实现这样的布局呢，尤其是不要在 resize 时重新计算布局？</p>
<p>在经过一些尝试后，我发现可在一定程度上用纯 CSS 实现类似的布局，这里说的一定程度上仅使用 CSS 实现布局，我的意思是，布局一但渲染完成，布局后序的 resize，zoom 都可以在没有 JS 参与的情况下保持稳定，也就是说，首次的渲染甚至可以通过服务器完成，整个过程可以没有 JS 参与，所以说是用纯 CSS 实现也不过分。</p>
<p>实现过程<br>下面就来介绍一下我是如何只通过 CSS 一步一步实现的这个布局的</p>
<p>一开始，我们将图片设置为相同的高度:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">  img &#123;</span><br><span class="line">    height: 200px;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">   &lt;img src=&quot;&quot; /&gt;</span><br><span class="line">   &lt;img src=&quot;&quot; /&gt;</span><br><span class="line">   &lt;img src=&quot;&quot; /&gt;</span><br><span class="line">   &lt;img src=&quot;&quot; /&gt;</span><br><span class="line">   &lt;img src=&quot;&quot; /&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>这样并不能让图片在水平方向上占满窗口，于是我想到了 flex-grow 这个属性，让 img 元素在水平方向变大占满容器，整个布局也变成了 flex 的了：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  flex-wrap: wrap;</span><br><span class="line">&#125;</span><br><span class="line">img &#123;</span><br><span class="line">  height: 200px;</span><br><span class="line">  flex-grow: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>把 flex container 的 flex-wrap 设置为 wrap，这样一行放不下时会自动折行，每行的图片图片因为 grow 的关系会在水平方向上占满屏幕，效果看上去已经很接近我们想要的了，但每张图片都会有不同程度的非等比拉伸，图片的内容会变形，这个好办，可以用 object-fit: cover; 来解决，但这么一来图片又会被裁剪一部分。</p>
<p>不过上述的 DOM 结构显然是没办法在实际中使用的:</p>
<ul>
<li>不支持 object-fit 的浏览器下图片会变形，因为图片没有容器，所以也没办法用 background-size 来解决这个问题</li>
<li>用了 object-fit 的浏览器下，图片会被裁剪一部分，这两条前面已经说过</li>
<li>没办法跟图片一起展示一些相关的信息，因为是 img 裸标签</li>
<li>另外就是在真实的网络环境中，图片的加载都是比较比较慢的，如果指望用图片自己来把布局撑开，用户肯定会看到非常多的闪烁，demo 里的闪烁应该已经非常明显了<br>所以我们上面的这个布局事实上是没办法用于任何生产环境的。</li>
</ul>
<p>接下来我们把 DOM 结构改成下面这样的:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;section&gt;</span><br><span class="line">   &lt;div&gt;</span><br><span class="line">      &lt;img src=&quot;&quot;/&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">   &lt;div&gt;</span><br><span class="line">      &lt;img src=&quot;&quot;/&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">   &lt;div&gt;</span><br><span class="line">      &lt;img src=&quot;&quot;/&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">   &lt;div&gt;</span><br><span class="line">      &lt;img src=&quot;&quot;/&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure>

<p>我们为图片增加了一个容器。依然把图片设置为定高，如此一来，每个 div 将被图片撑大，这时如果我们给 div 设置一个 flex-grow: 1; ，每个 div 将平分每行剩余的空间，div 会变宽，于是图片宽度并没有占满 div，如果我们将 img 的 width 设置为 100% 的话，在 IE 和 FF 下，div 已经 grow 的空间将不会重新分配（我觉得这是个很有意思的现象，图片先把 div 撑大，div grow 之后又把图片拉大），但在 Chrome 下，为 img 设置了 width: 100%; 之后，grow 的空间将被重新分配（我并没有深究具体是如何重新分配的），会让每个容器的宽度更加接近，这并不是我们想要的。试了几种样式组合后，我发现把 img 标签的 min-width 和 max-width 都设置为 100% 的话，在 Chrome 下的显示效果就跟 IE 和 FF 一样了。最后我们将 img 的 object-fit 属性设置为 cover，图片就被等比拉伸并占满容器了，不过与前一种布局一样，每行的高度是一样的，另外图片只显示了一部分，上下两边都被裁剪掉了一些。</p>
<p>在这种布局下，如果图片高度设置的比较小，布局已经没有什么大碍，因为图片越小就意味着每行图片越多而且剩余的空间越小并且剩余空间被更多的图片瓜分，那每个容器的宽高比就越接近图片的真实宽高比，多数图片都能显示出其主要部分。</p>
<p>唯一的问题是最后一行，当最后一行图片太少的时候，比如只有一张，因为 grow 的关系，它将占满一整行，而高度又只有我们设置的 200px，这时图片被展示出来的部分可能是非常少的，更不用说如果图片本身上比较高，而展示区域又非常宽的情况了。</p>
<p>针对这种情况，我们可以让列表最后的几张图片不 grow，这样就不至于出现太大的变形，我们可以算出每行的平均图片数量，然后用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">div:nth-last-child(5),</span><br><span class="line">div:nth-last-child(4),</span><br><span class="line">div:nth-last-child(3),</span><br><span class="line">div:nth-last-child(2),</span><br><span class="line">div:nth-last-child(1)&#123;</span><br><span class="line">  flex-grow: 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后配合 media query，在屏幕不同宽度时，让”最后一行”的元素个数在窗口宽度变化时也动态变化:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@media (max-width: 1000px) and (min-width: 900px) &#123;</span><br><span class="line">  div:nth-last-child(5),</span><br><span class="line">  div:nth-last-child(4),</span><br><span class="line">  div:nth-last-child(3),</span><br><span class="line">  div:nth-last-child(2),</span><br><span class="line">  div:nth-last-child(1)&#123;</span><br><span class="line">    flex-grow: 0;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media (max-width: 1100px) and (min-width: 1000px) &#123;</span><br><span class="line">  div:nth-last-child(7),</span><br><span class="line">  div:nth-last-child(6),</span><br><span class="line">  div:nth-last-child(5),</span><br><span class="line">  div:nth-last-child(4),</span><br><span class="line">  div:nth-last-child(3),</span><br><span class="line">  div:nth-last-child(2),</span><br><span class="line">  div:nth-last-child(1)&#123;</span><br><span class="line">    flex-grow: 0;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上面的代码写起来是相当麻烦的，因为每个屏幕宽度范围内又要写多个 nth-last-child 选择器，虽然我们可以用预处理器来循环迭代出这些代码，但最终生成出来的代码还是有不少重复。</p>
<p>有没有办法只指定最后多少个元素就行了，而不是写若干个 nth-last-child 选择器呢？其实办法也是有的，想必大家应该还记得 CSS 的 ~ 操作符吧，a ~ b 将选择在 a 后面且跟 a 同辈的所有匹配 b 的元素，于是我们可以这么写:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">div:nth-last-child(8),</span><br><span class="line">div:nth-last-child(8) ~ div&#123;</span><br><span class="line">  flex-grow: 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>先选中倒数第 8 个元素，然后选中倒数第 8 个元素后面的所有同辈结点，这样，就选中了最后的 8 个元素，进一步，我们可以直接将选择器改写为<code>div:nth-last-child(9) ~ div</code>，就可以只用一个选择器选择最后的 8 个元素了。</p>
<p>上面的几种选择尾部一些元素的不同选择器，实际上效果是不太一样的：</p>
<ul>
<li><code>div:nth-last-child</code> 的选择方法能保证倒数的 n 张图片一定被选中</li>
<li><code>div:nth-last-child(n)</code>, <code>div:nth-last-child(n) ~ div</code> 只能保证当 div 元素至少有 n 个时才能选中最后的 n 个元素，因为如果<code>:nth-last-child(n)</code>不存在，这个选择器就无效了</li>
<li><code>div:nth-last-child(n+1) ~ div </code>则需要保证 div 元素至少有 n+1 个时才能选中最后的 n 个元素，原理同上</li>
</ul>
<p>选择最后若干张图片这种方式还是不够完美，因为你无法确定你选择的 flex item 一定在最后一行，万一最后一行只有一张图片呢，这时倒数第二行的前几张图片就会 grow 的很厉害（因为后面几张不 grow），或者最后两行图片的数量都没有这么多张，那倒数第二行就没有元素 grow 了，就占不满这一行了，布局就会错乱。</p>
<p>那么有没有办法只让最后一行的元素不 grow 呢？一开始我也了很多，甚至在想有没有一个 :last-line 伪类什么的（因为有个 :first-line），始终没有找到能让最后一行不 grow 的方法，然而最后竟然在搜索一个其它话题时找到了办法：</p>
<p>那就是在最后一个元素的后面再加一个元素，让其 flex-grow 为一个非常大的值比如说 999999999，这样最后一行的剩余空间就基本全被这一个元素的 grow 占掉了，其它元素相当于没有 grow，更进一步，我们可以用伪元素来做这件事（不过 IE 浏览器的伪元素是不支持 flex 属性的，所以还是得用一个真实的元素做 placeholder）:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">section::after &#123;</span><br><span class="line">  content: &#x27;&#x27;;</span><br><span class="line">  flex-grow: 999999999;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>到这里，我们基本解决这个布局遇到的所有问题。</p>
<p>但还有最后一个问题，同前一种布局一样，如果你在线上去加载使用这种方式布局的网页，你会发现页面闪动非常厉害，因为图片在下载之前是不知道宽高的，我们并不能指望图片加载完成后让它把容器撑大，用户会被闪瞎眼。其实真正被闪瞎的可能是我们自己，毕竟开发时要刷新一万零八百遍。</p>
<p>所以，我们必须预先渲染出图片的展示区域（实际上几乎所有图片类网站都是这么做的），所以这里还是要小用一些 js，这些工作也可以在服务器端做，或者是用任何一个模板引擎(下面的代码使用了 angular 的模板语法)。</p>
<p>这个布局一旦吐出来，后续对页面所有的动作(resize，zoom)都不会使布局错乱，同时也不需要 JS 参与，符合前文所说的用纯 CSS 实现:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">  section &#123;</span><br><span class="line">    padding: 2px;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-wrap: wrap;</span><br><span class="line">    &amp;::after &#123;</span><br><span class="line">      content: &#x27;&#x27;;</span><br><span class="line">      flex-grow: 999999999;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  div &#123;</span><br><span class="line">    margin: 2px;</span><br><span class="line">    position: relative;</span><br><span class="line">    height: 200px;</span><br><span class="line">    flex-grow: 1;</span><br><span class="line">    background-color: violet;</span><br><span class="line">    img &#123;</span><br><span class="line">      max-width: 100%;</span><br><span class="line">      min-width: 100%;</span><br><span class="line">      height: 200px;</span><br><span class="line">      object-fit: cover;</span><br><span class="line">      vertical-align: bottom;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;section&gt;</span><br><span class="line">    // 下一行的**表达式**是计算当图片以 200 的高度等比拉伸展示时宽度的值</span><br><span class="line">    &lt;div ng-repeat=&quot;img in imgs&quot; style=&quot;width:&#123;&#123;img.width*200/img.height&#125;&#125;px;&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure>

<p>到这里，我们才算实现了图片的非等宽布局。</p>
<p>那么这个布局的展示效果究竟如何呢？</p>
<p>实际上我专门写了代码计算每张图片被展示出来的比例到底有多少：在图片高度为 150px 左右时，约有三分之一的图片展示比例在 99% 以上。最差的图片展示比例一般在 70% 左右浮动，平均每张图片展示比例在 90% 以上。图片越矮，展示效果会越好；图片越高，展示效果就越差。</p>
<p>因为这种方案最后也被我抛弃了。</p>
<p>看到这里，你应该是觉得被坑了，因为这并没有实现标题中说的 Google Photos 照片列表的布局</p>
<p>因为每行的高度是一样的，就必然导致大部分图片没有完全展示，跟 Google Photos &#x2F; 500px 那些高大上的布局根本就不一样！</p>
<p>可是正文从现在才正式开始，下面介绍的方式也是我在实现了上面的布局后很久才想出来的，前面的内容只是介绍一些解决边角问题用的。</p>
<p>可以看到，前面的实现方式并没有让每张图片的内容全部都显示出来，因为每行的高度是一样的，而想要实现 500px 的布局，每行图片的高度很多时候是不一样的。</p>
<p>一开始我觉得，CSS 也就只能实现到这种程度了吧，直到我遇到了另一个需求:</p>
<p>我想用一个正方形的容器展示内容，并且希望无论浏览器窗口多宽，这些正方形的容器总是能铺满窗口的水平宽度而不留多余的空间(除了元素之间的空白)，乍一看这个需求可能需要 JS 参与：读出当前浏览器窗口的宽度，然后计算正方形容器的 size，然后渲染。</p>
<p>拉动过程中可以看到，正方形的容器会实时变大，大到一定程度后又变小让每行多出一个正方形容器。 如果只看这一个 demo，可能各位不一定能一下子想到如何实现的，但如果只有一个正方形容器，它的边长总是浏览器宽度的一半，想必很多人都知道的，长宽比固定的容器要怎么实现吧？</p>
<p>我们知道(事实上很多人都不确定，所以这可以做为一个面试题)，margin 和 padding 的值如果取为百分比的话，这个百分比是相对于父元素的宽度的，也就是说，如果我给一个 block 元素设置 padding-bottom(当然，也完全可以是 padding-top，甚至可以两个一起用~)为 100% 的话，元素本身高度指定为 0，那么这个元素将始终是一个正方形，并且会随着容器宽度的变化而变化，想要改变正方形的大小，只需要改变父容器的宽度就可以了：</p>
<p>拉动窗口可以看到色块会变大，但始终保持正方形。当然，如果参照物是浏览器窗口，那么在现代浏览中，这个效果可以用 vw &#x2F; vh 实现；但如果参照物不是浏览器窗口，就只能用垂直 padding 来实现了。</p>
<p>于是我就想到，如果不给 flex item 的元素设置高度，而是让其被一个子元素撑开，并且这个子元素的宽度是100%，padding-bottom 也是 100%，那么 flex item 及这个用来撑大父元素的子元素就会同时保持为正方形了，于是就实现了上面的那种正方形阵列布局。</p>
<p>但仅仅这样还不够，最后一行又会出问题，如果最后一行的元素个数跟前面的行不一样的话，它们虽然会保持正方形，但是因为 grow 的关系，会比较大，那如何保证最后一行的元素也跟前面的行大小相同呢，这时使用一个元素并设置很大的 flex-grow 让其占满最后一行剩余空间的做法已经不可行了，因为我们需要让最后一行的元素恰到好处的跟前面行的元素 grow 时多出一样的空间。</p>
<p>其实解决方案也很简单，把最后一行不当最后一行就行了！此话怎讲呢？</p>
<p>在最后添加多个占位符，保证可见的最后一个元素永远处于视觉上的最后一行，而让占位符占据真正的最后一行，然后把这些占位符的高度设置为 0 。具体添加多少个占位符呢？显然是一行最多能显示多少个元素，就添加多少个了，比如前面的 demo 就添加了 8 个占位符，你可以在源代码里面看一下。另外为了更好的语义，其实可以用其它的标签当做占位符。</p>
<p>这样一来，始终能占满水平宽度的正方形阵列布局也实现了。</p>
<p>本来我以为，到这里就结束了，即使用上最先进的 flexbox 布局，CSS 也无法实现图片不裁减的完美布局。</p>
<ul>
<li>FAKE EOF -<br>早上我醒来的时候，突然想到，既然可以让一个容器始终保持正方形，那岂不是也可以让这个容器始终保持任何比例？显然是可以的，只要我们把用于撑大父元素的那个元素的 padding-bottom 设置为一个我们想要的值就可以了！这样一来，说不定可以实现图片布局中，所有图片都完全展示且占满水平宽度的布局（也就是 Google Photos &#x2F; 500px 的布局）！</li>
</ul>
<p>当然，前面提到过，由于图片加载缓慢，图片布局往往都会提前知道图片的宽高来进行容器的预渲染，然后图片加载完成后直接放进去。</p>
<p>所以这里我们仍然需要用 JS 或者服务器来计算一下图片的宽高比例，然后设置到 padding-bottom 上面去，以保证容器的宽高比始终是其内部图片的宽高比。</p>
<p>我们先让所有图片以 200px 的高度展示，写出如下模板代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div style=&quot;display:flex;flex-wrap:wrap;&quot;&gt;</span><br><span class="line">  &lt;div ng-repeat=&quot;img in imgs&quot; style=&quot;width:&#123;&#123;img.width*200/img.height&#125;&#125;px;&quot;&gt;这个公式计算了图片高度为200时的宽度的值</span><br><span class="line">    &lt;div style=&quot;padding-bottom:&#123;&#123;img.height/img.width*100&#125;&#125;%&quot;&gt;&lt;/div&gt;这个公式让此元素及其父元素的比例与图片原始比例相同，因为是垂直方向的 padding，所以是高度除以宽度</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>在上面布局中，因为 flex-wrap 的关系，每一行不够放的时候后面的内容就会折行，并且留出一些空白，每个容器的宽高比都是跟未来放入其内部的图片的宽高比是一样的，为了便于展示，我将图片大小设置为容器大小的四分之一，应该明显可以看出图片的右下角处于容器的中心位置。</p>
<p>下一步，我们只需要让所有的元素 grow 就可以了，那么是把所有的元素的 flex-grow 设置为 1 吗?</p>
<p>实际上如果设置了并看了效果，我们会发现并不是，因为我们希望每行元素在 grow 的时候，保持原有比例且高度相同。</p>
<p>可以看到如果给所有的 flex item 设置 flex-grow: 1; 的话，容器跟图片的比例并不一致，这里我将图片宽度设置了为容器的宽度以便观察。</p>
<p>通过一些简单的计算我们会发现，每行图片高度一致的时候，每张图片在水平方向上占用的宽度正好是其宽度在这一行所有图片宽度之和中所占的比例。</p>
<p>在前面不 grow 的情况下，每张图片的容器的宽度已经是按比例分配了，而每行的剩余空间，我们希望它仍然按照目前容器宽度所占的比例来分配，于是，每个容器的 grow 的值，正好就是它的宽度，只不过不要 px 这个单位。</p>
<p>最终的代码如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;flex，wrap</span><br><span class="line">  //实际上因为 flex-grow 是按比例分配，所以第二个公式里的 *200 可以不要，这要我们就只需要改前一个 200 了</span><br><span class="line">  &lt;div style=&quot;width:&#123;&#123;img.width*200/img.height&#125;&#125;px;flex-grow:&#123;&#123;img.width*200/img.height&#125;&#125;&quot; ng-repeat=&quot;img in imgs&quot;&gt;</span><br><span class="line">    &lt;div style=&quot;padding-bottom:&#123;&#123;img.height/img.width*100&#125;&#125;%&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>这样一来，容器会占满当前行，并且保持与未来内部所放入的图片相同的宽高比：</p>
<p>至于最后一行怎么处理，前面已经介绍过了，用一个 flex-grow 极大的元素占满剩余空间就可以了。</p>
<p>这种布局在渲染完成后，你可以放心的 resize 和 zoom，布局都不会错乱，而且没有 JS 的参与。</p>
<p>到这里，我们终于实现了类似 Google Photos &#x2F; 500px 网站的图片布局。</p>
<p>总结一下这个方案的原理：</p>
<p>padding（以及 margin）为百分比时是以容器的宽度为参照的<br>使用 flex-grow 来按图片宽度所占的比例分配水平空间<br>使用宽高比固定的子元素撑大带有指定比例 flex-grow 的 flex item 以实现不同行高度不一样并保持宽高比<br>这种布局的优点：</p>
<ol>
<li>不需要特殊的算法去计算每张图片渲染之后的宽高等信息</li>
<li>不需要在 resize，room 时重新计算布局</li>
<li>CSS 的方案容易跟任何框架集成</li>
</ol>
<p>最后说一下这种方案的一些缺点：</p>
<ul>
<li><p>很明显，我们只能指定每行图片的最低高度，然后等着它 grow，并没有办法指定每行高度的上限是多少。虽然我们可以设置一下容器的 max-height，这样一来被 max-height 影响的那些容器里面的图片就展示不完全了。实际上只要图片的比例都在一个正常的范围，是不会出现某一行的高度过高的</p>
</li>
<li><p>在遇到比例超出某个范围的图片时可以只用我们允许的最大比例展示这张图片，比如说遇到了一张 1:5 的图片，我们只以 1:3 的区域来展示它。或者也可以调整一下图片的顺序，但这就需要 JS 参与了。 500px 的这个搜索结果页面貌似就是这么做的，试着把窗口宽度调小，会发现第一张后面的图片展示不完全，因为如果展示完全的话，单张图片就占用了太大的屏幕面积，所以它限定了高度。</p>
</li>
<li><p>另外，最后一行的图片如果几乎要占满那一行时，因为占位符的存在，并不会占满，会显得不太理想（读者可以调整窗口宽度观察上面的完整 demo）。这种情况如果是使用 JS 计算的话，是可以避免的：在发现最后一行几乎要占满时，直接让其占满最后一行。</p>
</li>
<li><p>我们在提到评价图片布局优劣的标准时候说到，每张图片展示区域越接近，评分应该也越高。理论上如果使用 JS 来计算布局，可以在算法上做如下优化：如果一行中比较高的图片比较多，那么这一行就少放些图片，留出更多的空间用来放大图片，这样就能让高图和宽图显示面积更接近一些了。而用 CSS 的方案如果不改变图片顺序就没法做这种优化了。不过如果不改变图片顺序，即使算法做了这些优化，出现在高图比较多的行里的宽图，展示面积会更大，会出现一种比例失调的情况，也不够完美。</p>
</li>
</ul>
<p>关于降级</p>
<p>由于 IE 9 都是不支持 flexbox 的，所以这个方案必然需要优雅降级，在不支持的浏览器上，让图片都以正方形展示应该也不会太差，然后用 float 或者 inline-block 来折行，这里就不细说了。</p>
<p>最后，多个这种布局 float 一下，就可以实现 Google Photos 那种某几个连续日期的图片太少时，展示在同一行的效果。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>照片列表布局</tag>
      </tags>
  </entry>
  <entry>
    <title>js复制网页内容时自动加文章地址版权</title>
    <url>/2016/09/23/js%E5%A4%8D%E5%88%B6%E7%BD%91%E9%A1%B5%E5%86%85%E5%AE%B9%E6%97%B6%E8%87%AA%E5%8A%A8%E5%8A%A0%E6%96%87%E7%AB%A0%E5%9C%B0%E5%9D%80%E7%89%88%E6%9D%83/</url>
    <content><![CDATA[<p>这是个用金钱堆砌的互联网百花齐放的信息时代，也是个不注重版权的盗版时代。</p>
<span id="more"></span>

<p>而基本上每个前端er都或轻或重的搞了个自己的博客，如何在别人复制你网站文章内容时，自动在内容的尾端添加一段版权文本加当前页面的链接用以保护我们的权益被摆上日程。</p>
<p>功能代码，不多解释：</p>
<pre><code>&lt;script type=&#39;text/javascript&#39;&gt;
function addLink() &#123;
    var body_element = document.getElementsByTagName(&#39;body&#39;)[0];
    var selection;
    selection = window.getSelection();
    var pagelink = &quot;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;著作权归bigkaiwu个人博客所有&lt;br /&gt;商业转载请联系作者获得授权，非商业转载请注明出处.&lt;br /&gt;本文来源：&lt;a href=&#39;&quot;+document.location.href+&quot;&#39;&gt;&quot;+document.location.href+&quot;&lt;/a&gt;&quot;;
    var copy_text = selection + pagelink;
    var new_div = document.createElement(&#39;div&#39;);
    new_div.style.left=&#39;-99999px&#39;;
    new_div.style.position=&#39;absolute&#39;;
    body_element.appendChild(new_div );
    new_div.innerHTML = copy_text ;
    selection.selectAllChildren(new_div );
    window.setTimeout(function() &#123;
        body_element.removeChild(new_div );
    &#125;,0);
&#125;
    document.oncopy = addLink;
&lt;/script&gt;
</code></pre>
<p>又或者你心狠一点，直接把复制禁用掉：</p>
<pre><code>&lt;script&gt; 
function noCopy() 
&#123; 
    event.returnValue = false; 
&#125; 
&lt;/script&gt; 
&lt;body oncopy = &quot;noCopy()&quot;&gt;
</code></pre>
<p>或者，心地善良的你选择给个禁止复制的小提示：</p>
<pre><code>&lt;body oncopy=&quot;alert(&#39;对不起，禁止复制！&#39;);return false;&quot;&gt;
</code></pre>
<p>然后，你突然又想复制失效的同时，让右键也一起禁用掉，可以使用下面的代码：</p>
<pre><code>&lt;script language=&quot;Javascript&quot;&gt; 
document.oncontextmenu=new Function(&quot;event.returnValue=false&quot;); 
document.onselectstart=new Function(&quot;event.returnValue=false&quot;); 
&lt;/script&gt;
</code></pre>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>一些有趣的东西</tag>
      </tags>
  </entry>
  <entry>
    <title>切换窗口时的title更改</title>
    <url>/2016/08/14/%E5%88%87%E6%8D%A2%E7%AA%97%E5%8F%A3%E6%97%B6%E7%9A%84title%E6%9B%B4%E6%94%B9/</url>
    <content><![CDATA[<h3 id="进入和离开页面时更换title"><a href="#进入和离开页面时更换title" class="headerlink" title="进入和离开页面时更换title"></a>进入和离开页面时更换title</h3><p>当一个网页是可见或点击选中的状态时 Page Visibility API 可以让你获取到这种状态。在用户使用切换标签的方式来浏览网页时,非常合理的情况是任何在后台页面都不会展示给用户。 </p>
<span id="more"></span>

<p>当用户最小化网页或者浏览到其他标签的网页时，API将发送一个关于当前页面的可见信息的事件visibilitychange 。</p>
<p>你可以检测该事件然后执行一些活动或是展示不同的效果。比如，如果你的网站app正在播放一个视频，也许当用户浏览其他浏览器时它可以暂停，那么当用户切换回来的时候，就可以继续播放了。用户可以继续观看，不会因为浏览其他的浏览器导致丢失当前视频的进度。</p>
<h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p>Link to sectiondocument.hidden Read only<br>如果页面处于被认为是对用户隐藏状态时返回true，否则返回false。</p>
<p>Link to sectiondocument.visibilityState Read only<br>是一个用来展示文档可见性状态的字符串。可能的值：</p>
<p>visible : 页面内容至少是部分可见。 在实际中，这意味着页面是非最小化窗口的前景选项卡。</p>
<p>hidden : 页面内容对用户不可见。 在实际中，这意味着文档可以是一个后台标签，或是最小化窗口的一部分，或是在操作系统锁屏激活的状态下。</p>
<p>prerender : 页面内容正在被预渲染且对用户是不可见的(被document.hidden当做隐藏). 文档可能初始状态为prerender，但绝不会从其它值转为该值。 注释：浏览器支持是可选的。</p>
<p>unloaded : 页面正在从内存中卸载。 注释：浏览器支持是可选的。</p>
<h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><pre><code>&lt;script&gt;
(function() &#123;
    var OriginTitile = document.title, titleTime;
    document.addEventListener(&#39;visibilitychange&#39;, function() &#123;
        if (document.hidden) &#123;
            document.title = &#39;快回来嘛！&#39;;
            clearTimeout(titleTime);
        &#125; else &#123;
            document.title = &#39;(つェ⊂)抱抱~你回来了!&#39;;
            titleTime = setTimeout(function() &#123;
                document.title = OriginTitile;
            &#125;,2000);
        &#125;
    &#125;);
&#125;)();
&lt;/script&gt;
</code></pre>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>一些有趣的东西</tag>
      </tags>
  </entry>
  <entry>
    <title>由article和section引出的HTML5语义化</title>
    <url>/2016/07/23/%E7%94%B1article%E5%92%8Csection%E5%BC%95%E5%87%BA%E7%9A%84HTML5%E8%AF%AD%E4%B9%89%E5%8C%96/</url>
    <content><![CDATA[<hr>
<p>平时仿站切图自己写代码的时候，基本都是使用div这种标签，像article和section这样带有语义的标签没有怎么用过，以前面试的时候也被问过对HTML5语义化的理解，最后也不了了之。</p>
<span id="more"></span>

<p>距HTML5标准规范制定完成并公开发布已经有好些年了，但是在实际运用时，真正使用HTML5标签来开发的似乎不是很多，可能一部分原因是仍有部分用户在使用低版本浏览器。恰好前两天view-source源代码时，看到了article和section互相嵌套使用的案例，就索性研究了一下。如下：</p>
<h3 id="div、section、article主要区别，以及适用场合"><a href="#div、section、article主要区别，以及适用场合" class="headerlink" title="div、section、article主要区别，以及适用场合"></a>div、section、article主要区别，以及适用场合</h3><p>1.div在html早期版本就支持了，section和article是html5提出的两个语义话标签。如果只是针对一个块内容做样式化，三者并没有区别。</p>
<p>2.作为语义化标签，section应用的典型场景有文章的章节、标签对话框中的标签页、或者论文中有编号的部分。一般来说，当元素内容明确地出现在文档大纲中时，section就是适用的。</p>
<p>3.对于article标签来说，无论从结构上还是内容上来说，article本身就是独立的、完整的。最简单的方法就是看一段内容脱离了所在的语境之后，是否还是完整的、独立的，如果是，则应该用article标签。</p>
<p>4.div、section、article，语义上从无到有，逐渐增强。div无任何语义，仅仅用作样式化或者脚本化，对于一段主题性的内容，比较适用section，而假设这段内容是可以脱离上下文，作为完整的结构体独立存在的一段内容，那么就适合用article。原则上来说，能使用article的时候，也是可以使用section的。但是视情况而定，假如更适合使用article，那么就不要使用section了。</p>
<p>5.W3C 警告说：section 不仅仅是一个普通的容器标签。当一个标签只是为了样式化或者方便脚本使用时，应该使用 div 。</p>
<h3 id="什么时候使用？"><a href="#什么时候使用？" class="headerlink" title="什么时候使用？"></a>什么时候使用？</h3><p>1.div：作为布局以及样式化时使用。</p>
<p>2.section：表示文档中的节，一般是具有标题的。比如：文档大纲、文档章节、博客条目、用户评论部分或者论文中有编号的部分时使用；</p>
<p>通常会带有标题。如果没有标题，那么就不推荐使用section</p>
<p>3.article：表示独立的自包含内容，如：一篇文章。文章找那个可以包含标题、内容、注脚</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;article&gt;</span><br><span class="line">         &lt;header&gt;</span><br><span class="line">                     &lt;h1&gt;文章标题&lt;/h1&gt;</span><br><span class="line">                     &lt;p&gt;作者信息 发布时间&lt;/p&gt;</span><br><span class="line">         &lt;/header&gt;</span><br><span class="line">         &lt;section&gt;</span><br><span class="line">                     &lt;p&gt;文章正文&lt;/p&gt;</span><br><span class="line">         &lt;/section&gt;</span><br><span class="line">         &lt;footer&gt;</span><br><span class="line">                     &lt;p&gt;版权信息 注脚&lt;/p&gt;</span><br><span class="line">         &lt;/footer&gt;</span><br><span class="line">&lt;/article&gt;</span><br></pre></td></tr></table></figure>

<p>标注：a、：定义文档的页面介绍信息，比如：文章标题、发表时间</p>
<p>b、article和section可以互相嵌套使用</p>
<h3 id="什么是HTML5语义化？"><a href="#什么是HTML5语义化？" class="headerlink" title="什么是HTML5语义化？"></a>什么是HTML5语义化？</h3><p>简单地说，就是用合理、正确的标签来展示内容，比如h1~h6定义标题。</p>
<p>语义化优点：</p>
<p>易于用户阅读，样式丢失的时候能让页面呈现清晰的结构。<br>有利于SEO，搜索引擎根据标签来确定上下文和各个关键字的权重。<br>方便其他设备解析，如盲人阅读器根据语义渲染网页<br>有利于开发和维护，语义化更具可读性，代码更好维护，与CSS3关系更和谐。</p>
<h4 id="1、"><a href="#1、" class="headerlink" title="1、&lt;header&gt;"></a>1、<code>&lt;header&gt;</code></h4><p><code>&lt;header&gt;</code>定义文档或者文档的部分区域的页眉，应作为介绍内容或者导航链接栏的容器。</p>
<p>在一个文档中，您可以定义多个<code>&lt;header&gt;</code>元素，但需要注意的是<code>&lt;header&gt;</code>元素不能作为<code>&lt;address&gt;</code>、<code>&lt;footer&gt;</code> 或 <code>&lt;header&gt;</code> 元素的子元素。</p>
<h4 id="2、"><a href="#2、" class="headerlink" title="2、&lt;nav&gt;"></a>2、<code>&lt;nav&gt;</code></h4><p><code>&lt;nav&gt;</code>描述一个含有多个超链接的区域，该区域包含跳转到其他页面或页面内部其他部分的链接列表。</p>
<p>在一个文档中，可定义多个<code>&lt;nav&gt;</code>元素。</p>
<h4 id="3、"><a href="#3、" class="headerlink" title="3、&lt;main&gt;"></a>3、<code>&lt;main&gt;</code></h4><p><code>&lt;main&gt;</code> 定义文档的主要内容，该内容在文档中应当是独一无二的，不包含任何在文档中重复的内容，比如侧边栏，导航栏链接，版权信息，网站logo，搜索框（除非搜索框作为文档的主要功能）。</p>
<p>需要注意的是在一个文档中不能出现多个<code>&lt;main&gt;</code>标签。</p>
<h4 id="4、"><a href="#4、" class="headerlink" title="4、&lt;article&gt;"></a>4、<code>&lt;article&gt;</code></h4><p><code>&lt;article&gt;</code>元素表示文档、页面、应用或网站中的独立结构，是可独立分配的、可复用的结构，如在发布中，它可能是论坛帖子、杂志或新闻文章、博客、用户提交的评论、交互式组件，或者其他独立的内容项目。</p>
<p>当<code>&lt;article&gt;</code>元素嵌套使用时，则该元素代表与外层元素有关的文章。例如，代表博客评论的<code>&lt;article&gt;</code>元素可嵌套在代表博客文章的<code>&lt;article&gt;</code>元素中。</p>
<h4 id="5、"><a href="#5、" class="headerlink" title="5、&lt;aside&gt;"></a>5、<code>&lt;aside&gt;</code></h4><p><code>&lt;aside&gt;</code> 元素表示一个和其余页面内容几乎无关的部分，被认为是独立于该内容的一部分且可以被单独的拆分出来而不会影响整体。通常表现为侧边栏或嵌入内容。</p>
<h4 id="6、"><a href="#6、" class="headerlink" title="6、&lt;footer&gt;"></a>6、<code>&lt;footer&gt;</code></h4><p><code>&lt;footer&gt;</code>定义最近一个章节内容或者根节点元素的页脚。一个页脚通常包含该章节作者、版权数据或者与文档相关的链接等信息。</p>
<p>使用footer插入联系信息时，应在 footer 元素内使用<code> &lt;address&gt;</code> 元素。</p>
<p>注意不能包含<code>&lt;footer&gt;</code>或者<code>&lt;header&gt;</code></p>
<h4 id="7、"><a href="#7、" class="headerlink" title="7、&lt;section&gt;"></a>7、<code>&lt;section&gt;</code></h4><p><code>&lt;section&gt;</code>表示文档中的一个区域（或节），比如，内容中的一个专题组。</p>
<p>当然，最后还是要说一下，有些语义不合适的情况下，也不要强行使用，老老实实的该用什么用什么吧。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>HTML5语义化</tag>
      </tags>
  </entry>
  <entry>
    <title>初始化css</title>
    <url>/2014/04/22/%E5%88%9D%E5%A7%8B%E5%8C%96css/</url>
    <content><![CDATA[<p>个人比较喜欢用的一个common.css。</p>
<span id="more"></span>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>, <span class="selector-tag">div</span>, <span class="selector-tag">dl</span>, <span class="selector-tag">dt</span>, <span class="selector-tag">dd</span>, <span class="selector-tag">ul</span>, <span class="selector-tag">ol</span>, <span class="selector-tag">li</span>, <span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span>, pre, <span class="selector-tag">form</span>, <span class="selector-tag">fieldset</span>, <span class="selector-tag">input</span>, <span class="selector-tag">p</span>, <span class="selector-tag">blockquote</span>, <span class="selector-tag">th</span>, <span class="selector-tag">td</span> &#123; <span class="attribute">margin</span>:<span class="number">0</span>; <span class="attribute">padding</span>:<span class="number">0</span>; &#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123; <span class="attribute">font-size</span>:<span class="number">12px</span>; <span class="attribute">color</span>:<span class="number">#666</span>; <span class="attribute">font-family</span>: Microsoft YaHei,SimSun;<span class="attribute">background</span>: <span class="number">#f6f6f6</span>;<span class="attribute">line-height</span>: <span class="number">2</span>;&#125;</span><br><span class="line"><span class="selector-tag">fieldset</span>, <span class="selector-tag">img</span> &#123; <span class="attribute">border</span>:<span class="number">0</span>; &#125;</span><br><span class="line"><span class="selector-tag">ol</span>, <span class="selector-tag">ul</span> &#123; <span class="attribute">list-style</span>:none; &#125;</span><br><span class="line"><span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span>&#123; <span class="attribute">font-size</span>:<span class="number">100%</span>; &#125;</span><br><span class="line"><span class="selector-tag">em</span> &#123; <span class="attribute">font-style</span>:normal; &#125;</span><br><span class="line"><span class="selector-tag">input</span>, <span class="selector-tag">button</span>, select, <span class="selector-tag">textarea</span> &#123; <span class="attribute">outline</span>:none; &#125;</span><br><span class="line"><span class="selector-tag">textarea</span> &#123; <span class="attribute">resize</span>:none; &#125; //禁用了文本的拖拉，尤其在谷歌下</span><br><span class="line"><span class="selector-tag">p</span>&#123; <span class="attribute">text-align</span>:justify; <span class="attribute">text-justify</span>:distribute;<span class="attribute">text-indent</span>:<span class="number">2em</span>;&#125; //为了使文本段落左右两边对齐</span><br><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">word-wrap</span>:break-word&#125;</span><br><span class="line"><span class="selector-tag">a</span> &#123;<span class="attribute">text-decoration</span>:none; &#125;</span><br><span class="line"><span class="selector-tag">i</span>&#123;<span class="attribute">display</span>: inline-block;&#125;</span><br><span class="line"><span class="selector-tag">span</span>&#123;<span class="attribute">display</span>: inline-block;&#125;</span><br><span class="line"><span class="comment">/*a:hover &#123; color: #f60; text-decoration:none; &#125;*/</span></span><br><span class="line"><span class="selector-tag">address</span>,<span class="selector-tag">cite</span>,<span class="selector-tag">code</span>,<span class="selector-tag">em</span>,<span class="selector-tag">th</span> &#123;<span class="attribute">font-weight</span>:normal; <span class="attribute">font-style</span>:normal;&#125;</span><br><span class="line"><span class="selector-tag">a</span>&#123;<span class="attribute">color</span>:inherit;<span class="attribute">text-decoration</span>:none;<span class="attribute">display</span>: inline-block;&#125;</span><br><span class="line"><span class="comment">/*a:link&#123;color:#009;&#125;*/</span></span><br><span class="line"><span class="comment">/*a:visited&#123;color:#800080;&#125;*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,<span class="selector-tag">a</span><span class="selector-pseudo">:active</span>,<span class="selector-tag">a</span><span class="selector-pseudo">:focus</span>&#123;<span class="attribute">text-decoration</span>:underline;&#125;</span><br><span class="line"><span class="selector-tag">table</span> &#123; <span class="attribute">border-collapse</span>:collapse; <span class="attribute">border-spacing</span>:<span class="number">0</span>; &#125;</span><br><span class="line"><span class="comment">/*应该把自己喜欢的下拉框，表格，之类*/</span></span><br><span class="line"><span class="comment">/*一些自己平时喜欢使用的式样*/</span></span><br><span class="line"><span class="selector-class">.fl</span>&#123;<span class="attribute">float</span>: left<span class="meta">!important</span>;&#125;</span><br><span class="line"><span class="selector-class">.fr</span>&#123;<span class="attribute">float</span>: right<span class="meta">!important</span>;&#125;</span><br><span class="line"><span class="comment">/*1,2,3,5,8,10,15,20,30,50,70,100*/</span></span><br><span class="line"><span class="selector-class">.ml1</span>&#123;<span class="attribute">margin-left</span>: <span class="number">1px</span>&#125;<span class="selector-class">.ml2</span>&#123;<span class="attribute">margin-left</span>: <span class="number">2px</span>&#125;<span class="selector-class">.ml3</span>&#123;<span class="attribute">margin-left</span>: <span class="number">3px</span>&#125;<span class="selector-class">.ml5</span>&#123;<span class="attribute">margin-left</span>: <span class="number">5px</span>&#125;<span class="selector-class">.m8</span>&#123;<span class="attribute">margin-left</span>: <span class="number">8px</span>&#125;<span class="selector-class">.ml10</span>&#123;<span class="attribute">margin-left</span>: <span class="number">10px</span>&#125;<span class="selector-class">.ml15</span>&#123;<span class="attribute">margin-left</span>: <span class="number">15px</span>&#125;<span class="selector-class">.ml20</span>&#123;<span class="attribute">margin-left</span>: <span class="number">20px</span>&#125;<span class="selector-class">.ml30</span>&#123;<span class="attribute">margin-left</span>: <span class="number">30px</span>&#125;<span class="selector-class">.ml50</span>&#123;<span class="attribute">margin-left</span>: <span class="number">50px</span>&#125;<span class="selector-class">.ml70</span>&#123;<span class="attribute">margin-left</span>: <span class="number">70px</span>&#125;<span class="selector-class">.ml100</span>&#123;<span class="attribute">margin-left</span>: <span class="number">100px</span>&#125;</span><br><span class="line"><span class="selector-class">.mr1</span>&#123;<span class="attribute">margin-right</span>: <span class="number">1px</span>&#125;<span class="selector-class">.mr2</span>&#123;<span class="attribute">margin-right</span>: <span class="number">2px</span>&#125;<span class="selector-class">.mr3</span>&#123;<span class="attribute">margin-right</span>: <span class="number">3px</span>&#125;<span class="selector-class">.mr5</span>&#123;<span class="attribute">margin-right</span>: <span class="number">5px</span>&#125;<span class="selector-class">.m8</span>&#123;<span class="attribute">margin-right</span>: <span class="number">8px</span>&#125;<span class="selector-class">.mr10</span>&#123;<span class="attribute">margin-right</span>: <span class="number">10px</span>&#125;<span class="selector-class">.mr15</span>&#123;<span class="attribute">margin-right</span>: <span class="number">15px</span>&#125;<span class="selector-class">.mr20</span>&#123;<span class="attribute">margin-right</span>: <span class="number">20px</span>&#125;<span class="selector-class">.mr30</span>&#123;<span class="attribute">margin-right</span>: <span class="number">30px</span>&#125;<span class="selector-class">.mr50</span>&#123;<span class="attribute">margin-right</span>: <span class="number">50px</span>&#125;<span class="selector-class">.mr70</span>&#123;<span class="attribute">margin-right</span>: <span class="number">70px</span>&#125;<span class="selector-class">.mr100</span>&#123;<span class="attribute">margin-right</span>: <span class="number">100px</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.mtf1</span>&#123;<span class="attribute">margin-top</span>: -<span class="number">1px</span>&#125;<span class="selector-class">.mtf2</span>&#123;<span class="attribute">margin-top</span>: -<span class="number">2px</span>&#125;<span class="selector-class">.mtf3</span>&#123;<span class="attribute">margin-top</span>: -<span class="number">3px</span>&#125;<span class="selector-class">.mtf5</span>&#123;<span class="attribute">margin-top</span>: -<span class="number">5px</span>&#125;<span class="selector-class">.mtf7</span>&#123;<span class="attribute">margin-top</span>: -<span class="number">7px</span>&#125;<span class="selector-class">.mtf10</span>&#123;<span class="attribute">margin-top</span>: -<span class="number">10px</span>&#125;</span><br><span class="line"><span class="selector-class">.mt1</span>&#123;<span class="attribute">margin-top</span>: <span class="number">1px</span>&#125;<span class="selector-class">.mt2</span>&#123;<span class="attribute">margin-top</span>: <span class="number">2px</span>&#125;<span class="selector-class">.mt3</span>&#123;<span class="attribute">margin-top</span>: <span class="number">3px</span>&#125;<span class="selector-class">.mt5</span>&#123;<span class="attribute">margin-top</span>: <span class="number">5px</span>&#125;<span class="selector-class">.m8</span>&#123;<span class="attribute">margin-top</span>: <span class="number">8px</span>&#125;<span class="selector-class">.mt10</span>&#123;<span class="attribute">margin-top</span>: <span class="number">10px</span>&#125;<span class="selector-class">.mt15</span>&#123;<span class="attribute">margin-top</span>: <span class="number">15px</span>&#125;<span class="selector-class">.mt20</span>&#123;<span class="attribute">margin-top</span>: <span class="number">20px</span>&#125;<span class="selector-class">.mt30</span>&#123;<span class="attribute">margin-top</span>: <span class="number">30px</span>&#125;<span class="selector-class">.mt50</span>&#123;<span class="attribute">margin-top</span>: <span class="number">50px</span>&#125;<span class="selector-class">.mt70</span>&#123;<span class="attribute">margin-top</span>: <span class="number">70px</span>&#125;<span class="selector-class">.mt100</span>&#123;<span class="attribute">margin-top</span>: <span class="number">100px</span>&#125;</span><br><span class="line"><span class="selector-class">.mb1</span>&#123;<span class="attribute">margin-bottom</span>: <span class="number">1px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.mb2</span>&#123;<span class="attribute">margin-bottom</span>: <span class="number">2px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.mb3</span>&#123;<span class="attribute">margin-bottom</span>: <span class="number">3px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.mb5</span>&#123;<span class="attribute">margin-bottom</span>: <span class="number">5px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.m8</span>&#123;<span class="attribute">margin-bottom</span>: <span class="number">8px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.mb10</span>&#123;<span class="attribute">margin-bottom</span>: <span class="number">10px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.mb15</span>&#123;<span class="attribute">margin-bottom</span>: <span class="number">15px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.mb20</span>&#123;<span class="attribute">margin-bottom</span>: <span class="number">20px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.mb30</span>&#123;<span class="attribute">margin-bottom</span>: <span class="number">30px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.mb50</span>&#123;<span class="attribute">margin-bottom</span>: <span class="number">50px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.mb70</span>&#123;<span class="attribute">margin-bottom</span>: <span class="number">70px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.mb100</span>&#123;<span class="attribute">margin-bottom</span>: <span class="number">100px</span><span class="meta">!important</span>;&#125;</span><br><span class="line"><span class="selector-class">.h1</span>&#123;<span class="attribute">height</span>: <span class="number">1px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.h2</span>&#123;<span class="attribute">height</span>: <span class="number">2px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.h3</span>&#123;<span class="attribute">height</span>: <span class="number">3px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.h5</span>&#123;<span class="attribute">height</span>: <span class="number">5px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.h8</span>&#123;<span class="attribute">height</span>: <span class="number">8px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.h10</span>&#123;<span class="attribute">height</span>: <span class="number">10px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.h15</span>&#123;<span class="attribute">height</span>: <span class="number">15px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.h20</span>&#123;<span class="attribute">height</span>: <span class="number">20px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.h30</span>&#123;<span class="attribute">height</span>: <span class="number">30px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.h50</span>&#123;<span class="attribute">height</span>: <span class="number">50px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.h70</span>&#123;<span class="attribute">height</span>: <span class="number">70px</span><span class="meta">!important</span>;&#125;<span class="selector-class">.h100</span>&#123;<span class="attribute">height</span>: <span class="number">100px</span><span class="meta">!important</span>;&#125;</span><br><span class="line"><span class="selector-class">.w1</span>&#123;<span class="attribute">width</span>: <span class="number">1px</span>&#125;<span class="selector-class">.w2</span>&#123;<span class="attribute">width</span>: <span class="number">2px</span>&#125;<span class="selector-class">.w3</span>&#123;<span class="attribute">width</span>: <span class="number">3px</span>&#125;<span class="selector-class">.w5</span>&#123;<span class="attribute">width</span>: <span class="number">5px</span>&#125;<span class="selector-class">.m8</span>&#123;<span class="attribute">width</span>: <span class="number">8px</span>&#125;<span class="selector-class">.w10</span>&#123;<span class="attribute">width</span>: <span class="number">10px</span>&#125;<span class="selector-class">.w15</span>&#123;<span class="attribute">width</span>: <span class="number">15px</span>&#125;<span class="selector-class">.w20</span>&#123;<span class="attribute">width</span>: <span class="number">20px</span>&#125;<span class="selector-class">.w30</span>&#123;<span class="attribute">width</span>: <span class="number">30px</span>&#125;<span class="selector-class">.w50</span>&#123;<span class="attribute">width</span>: <span class="number">50px</span>&#125;<span class="selector-class">.w70</span>&#123;<span class="attribute">width</span>: <span class="number">70px</span>&#125;<span class="selector-class">.w100</span>&#123;<span class="attribute">width</span>: <span class="number">100px</span>&#125;</span><br><span class="line"><span class="comment">/*这个属性的时候必须和h1或者其他的h结果*/</span></span><br><span class="line"><span class="selector-class">.wp3</span>&#123;<span class="attribute">width</span>: <span class="number">3%</span>;&#125;<span class="selector-class">.wp5</span>&#123;<span class="attribute">width</span>: <span class="number">5%</span>;&#125;<span class="selector-class">.wp7</span>&#123;<span class="attribute">width</span>: <span class="number">7%</span>;&#125;<span class="selector-class">.wp10</span>&#123;<span class="attribute">width</span>: <span class="number">10%</span>;&#125;<span class="selector-class">.wp15</span>&#123;<span class="attribute">width</span>: <span class="number">15%</span>;&#125;<span class="selector-class">.wp20</span>&#123;<span class="attribute">width</span>: <span class="number">20%</span>;&#125;<span class="selector-class">.wp25</span>&#123;<span class="attribute">width</span>: <span class="number">25%</span>;&#125;<span class="selector-class">.wp30</span>&#123;<span class="attribute">width</span>: <span class="number">30%</span>;&#125;<span class="selector-class">.wp40</span>&#123;<span class="attribute">width</span>: <span class="number">40%</span>;&#125;<span class="selector-class">.wp50</span>&#123;<span class="attribute">width</span>: <span class="number">50%</span>;&#125;<span class="selector-class">.wp60</span>&#123;<span class="attribute">width</span>: <span class="number">60%</span>;&#125;<span class="selector-class">.wp100</span>&#123;<span class="attribute">width</span>: <span class="number">100%</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.f12</span>&#123;<span class="attribute">font-size</span>: <span class="number">12px</span>;&#125;<span class="selector-class">.f13</span>&#123;<span class="attribute">font-size</span>: <span class="number">13px</span>;&#125;<span class="selector-class">.f14</span>&#123;<span class="attribute">font-size</span>: <span class="number">14px</span>;&#125;<span class="selector-class">.f15</span>&#123;<span class="attribute">font-size</span>: <span class="number">15px</span>;&#125;<span class="selector-class">.f16</span>&#123;<span class="attribute">font-size</span>: <span class="number">16px</span>;&#125;<span class="selector-class">.f17</span>&#123;<span class="attribute">font-size</span>: <span class="number">17px</span>;&#125;<span class="selector-class">.f18</span>&#123;<span class="attribute">font-size</span>: <span class="number">18px</span>;&#125;<span class="selector-class">.f20</span>&#123;<span class="attribute">font-size</span>: <span class="number">20px</span>;&#125;</span><br><span class="line"><span class="selector-class">.row</span>&#123;<span class="attribute">width</span>:<span class="number">100%</span>;&#125;</span><br><span class="line"><span class="selector-class">.test</span>&#123;<span class="attribute">border</span>: <span class="number">1px</span> solid red;&#125;</span><br><span class="line"><span class="selector-class">.mauto</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span> auto;&#125;</span><br><span class="line"><span class="selector-class">.inlineblock</span>&#123;<span class="attribute">display</span>: inline-block;&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span>&#123;<span class="attribute">clear</span>: both;&#125;</span><br><span class="line"><span class="selector-class">.block</span>&#123;<span class="attribute">display</span>: block;&#125;</span><br><span class="line"><span class="comment">/*对于行内样式这个时候就不能show和hide了，这个必须使用removeClass(&#x27;none&#x27;)*/</span></span><br><span class="line"><span class="selector-class">.none</span>&#123;<span class="attribute">display</span>: none<span class="meta">!important</span>;&#125;</span><br><span class="line"><span class="comment">/*absolute relative*/</span></span><br><span class="line"><span class="selector-class">.absolute</span>&#123;<span class="attribute">position</span>: absolute;&#125;</span><br><span class="line"><span class="selector-class">.relative</span>&#123;<span class="attribute">position</span>:relative;&#125;</span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line"><span class="comment">/*text-align: center;*/</span></span><br><span class="line"><span class="comment">/*vertical-align: middle;*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*normalize.css 一些东西添加进来*/</span></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">-ms-text-size-adjust: <span class="number">100%</span>; <span class="comment">/* 3 */</span></span><br><span class="line">-webkit-text-size-adjust: <span class="number">100%</span>; <span class="comment">/* 3 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Add the correct display in IE 9-.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">article</span>,</span><br><span class="line"><span class="selector-tag">aside</span>,</span><br><span class="line"><span class="selector-tag">footer</span>,</span><br><span class="line"><span class="selector-tag">header</span>,</span><br><span class="line"><span class="selector-tag">nav</span>,</span><br><span class="line"><span class="selector-tag">section</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Correct the font size and margin on `h1` elements within `section` and</span></span><br><span class="line"><span class="comment">* `article` contexts in Chrome, Firefox, and Safari.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">2em</span>;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0.67em</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Add the correct display in IE 9-.</span></span><br><span class="line"><span class="comment">* 1. Add the correct display in IE.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">figcaption</span>,</span><br><span class="line"><span class="selector-tag">figure</span>,</span><br><span class="line"><span class="selector-tag">main</span> &#123; <span class="comment">/* 1 */</span></span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Add the correct margin in IE 8.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">figure</span> &#123;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">1em</span> <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 1. Add the correct box sizing in Firefox.</span></span><br><span class="line"><span class="comment">* 2. Show the overflow in Edge and IE.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">hr &#123;</span><br><span class="line"><span class="attribute">box-sizing</span>: content-box; <span class="comment">/* 1 */</span></span><br><span class="line"><span class="attribute">height</span>: <span class="number">0</span>; <span class="comment">/* 1 */</span></span><br><span class="line"><span class="attribute">overflow</span>: visible; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 1. Correct the inheritance and scaling of font size in all browsers.</span></span><br><span class="line"><span class="comment">* 2. Correct the odd `em` font sizing in all browsers.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">pre &#123;</span><br><span class="line"><span class="attribute">font-family</span>: monospace, monospace; <span class="comment">/* 1 */</span></span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">1em</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* Text-level semantics</span></span><br><span class="line"><span class="comment">========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 1. Remove the gray background on active links in IE 10.</span></span><br><span class="line"><span class="comment">* 2. Remove gaps in links underline in iOS 8+ and Safari 8+.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line"><span class="attribute">background-color</span>: transparent; <span class="comment">/* 1 */</span></span><br><span class="line">-webkit-<span class="attribute">text-decoration</span>-skip: objects; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Remove the outline on focused links when they are also active or hovered</span></span><br><span class="line"><span class="comment">* in all browsers (opinionated).</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line"><span class="attribute">outline-width</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 1. Remove the bottom border in Firefox 39-.</span></span><br><span class="line"><span class="comment">* 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">abbr</span><span class="selector-attr">[title]</span> &#123;</span><br><span class="line"><span class="attribute">border-bottom</span>: none; <span class="comment">/* 1 */</span></span><br><span class="line"><span class="attribute">text-decoration</span>: underline; <span class="comment">/* 2 */</span></span><br><span class="line"><span class="attribute">text-decoration</span>: underline dotted; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Prevent the duplicate application of `bolder` by the next rule in Safari 6.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">b</span>,</span><br><span class="line"><span class="selector-tag">strong</span> &#123;</span><br><span class="line"><span class="attribute">font-weight</span>: inherit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Add the correct font weight in Chrome, Edge, and Safari.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">b</span>,</span><br><span class="line"><span class="selector-tag">strong</span> &#123;</span><br><span class="line"><span class="attribute">font-weight</span>: bolder;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* Embedded content</span></span><br><span class="line"><span class="comment">========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Add the correct display in IE 9-.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">audio</span>,</span><br><span class="line"><span class="selector-tag">video</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Add the correct display in iOS 4-7.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">audio</span><span class="selector-pseudo">:not</span>(<span class="selector-attr">[controls]</span>) &#123;</span><br><span class="line"><span class="attribute">display</span>: none;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Remove the border on images inside links in IE 10-.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line"><span class="attribute">border-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Hide the overflow in IE.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">svg<span class="selector-pseudo">:not</span>(<span class="selector-pseudo">:root</span>) &#123;</span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Forms</span></span><br><span class="line"><span class="comment">========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 1. Change the font styles in all browsers (opinionated).</span></span><br><span class="line"><span class="comment">* 2. Remove the margin in Firefox and Safari.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span>,</span><br><span class="line">optgroup,</span><br><span class="line">select,</span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: sans-serif; <span class="comment">/* 1 */</span></span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">100%</span>; <span class="comment">/* 1 */</span></span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">1.15</span>; <span class="comment">/* 1 */</span></span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Show the overflow in IE.</span></span><br><span class="line"><span class="comment">* 1. Show the overflow in Edge.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span> &#123; <span class="comment">/* 1 */</span></span><br><span class="line"><span class="attribute">overflow</span>: visible;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Remove the inheritance of text transform in Edge, Firefox, and IE.</span></span><br><span class="line"><span class="comment">* 1. Remove the inheritance of text transform in Firefox.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line">select &#123; <span class="comment">/* 1 */</span></span><br><span class="line"><span class="attribute">text-transform</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`</span></span><br><span class="line"><span class="comment">* controls in Android 4.</span></span><br><span class="line"><span class="comment">* 2. Correct the inability to style clickable types in iOS and Safari.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">html</span> <span class="selector-attr">[type=<span class="string">&quot;button&quot;</span>]</span>, <span class="comment">/* 1 */</span></span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;reset&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span> &#123;</span><br><span class="line">-webkit-appearance: button; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Remove the inner border and padding in Firefox.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>::-moz-focus-inner,</span><br><span class="line">[type=<span class="string">&quot;button&quot;</span>]::-moz-focus-inner,</span><br><span class="line">[type=<span class="string">&quot;reset&quot;</span>]::-moz-focus-inner,</span><br><span class="line">[type=<span class="string">&quot;submit&quot;</span>]::-moz-focus-inner &#123;</span><br><span class="line"><span class="attribute">border-style</span>: none;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Restore the focus styles unset by the previous rule.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>:-moz-focusring,</span><br><span class="line">[type=<span class="string">&quot;button&quot;</span>]:-moz-focusring,</span><br><span class="line">[type=<span class="string">&quot;reset&quot;</span>]:-moz-focusring,</span><br><span class="line">[type=<span class="string">&quot;submit&quot;</span>]:-moz-focusring &#123;</span><br><span class="line"><span class="attribute">outline</span>: <span class="number">1px</span> dotted ButtonText;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Change the border, margin, and padding in all browsers (opinionated).</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">fieldset</span> &#123;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#c0c0c0</span>;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> <span class="number">2px</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0.35em</span> <span class="number">0.625em</span> <span class="number">0.75em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 1. Correct the text wrapping in Edge and IE.</span></span><br><span class="line"><span class="comment">* 2. Correct the color inheritance from `fieldset` elements in IE.</span></span><br><span class="line"><span class="comment">* 3. Remove the padding so developers are not caught out when they zero out</span></span><br><span class="line"><span class="comment">* `fieldset` elements in all browsers.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">legend</span> &#123;</span><br><span class="line"><span class="attribute">box-sizing</span>: border-box; <span class="comment">/* 1 */</span></span><br><span class="line"><span class="attribute">color</span>: inherit; <span class="comment">/* 2 */</span></span><br><span class="line"><span class="attribute">display</span>: table; <span class="comment">/* 1 */</span></span><br><span class="line"><span class="attribute">max-width</span>: <span class="number">100%</span>; <span class="comment">/* 1 */</span></span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>; <span class="comment">/* 3 */</span></span><br><span class="line"><span class="attribute">white-space</span>: normal; <span class="comment">/* 1 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 1. Add the correct display in IE 9-.</span></span><br><span class="line"><span class="comment">* 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">progress &#123;</span><br><span class="line"><span class="attribute">display</span>: inline-block; <span class="comment">/* 1 */</span></span><br><span class="line"><span class="attribute">vertical-align</span>: baseline; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Remove the default vertical scrollbar in IE.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line"><span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 1. Add the correct box sizing in IE 10-.</span></span><br><span class="line"><span class="comment">* 2. Remove the padding in IE 10-.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;checkbox&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;radio&quot;</span>]</span> &#123;</span><br><span class="line"><span class="attribute">box-sizing</span>: border-box; <span class="comment">/* 1 */</span></span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Correct the cursor style of increment and decrement buttons in Chrome.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;number&quot;</span>]</span>::-webkit-inner-spin-button,</span><br><span class="line">[type=<span class="string">&quot;number&quot;</span>]::-webkit-outer-spin-button &#123;</span><br><span class="line"><span class="attribute">height</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 1. Correct the odd appearance in Chrome and Safari.</span></span><br><span class="line"><span class="comment">* 2. Correct the outline style in Safari.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;search&quot;</span>]</span> &#123;</span><br><span class="line">-webkit-appearance: textfield; <span class="comment">/* 1 */</span></span><br><span class="line"><span class="attribute">outline-offset</span>: -<span class="number">2px</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Remove the inner padding and cancel buttons in Chrome and Safari on macOS.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;search&quot;</span>]</span>::-webkit-search-cancel-button,</span><br><span class="line">[type=<span class="string">&quot;search&quot;</span>]::-webkit-search-decoration &#123;</span><br><span class="line">-webkit-appearance: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 1. Correct the inability to style clickable types in iOS and Safari.</span></span><br><span class="line"><span class="comment">* 2. Change font properties to `inherit` in Safari.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">::-webkit-file-upload-button &#123;</span><br><span class="line">-webkit-appearance: button; <span class="comment">/* 1 */</span></span><br><span class="line"><span class="attribute">font</span>: inherit; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Interactive</span></span><br><span class="line"><span class="comment">========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Add the correct display in IE 9-.</span></span><br><span class="line"><span class="comment">* 1. Add the correct display in Edge, IE, and Firefox.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">details</span>, <span class="comment">/* 1 */</span></span><br><span class="line"><span class="selector-tag">menu</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Add the correct display in all browsers.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">summary</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: list-item;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Scripting</span></span><br><span class="line"><span class="comment">========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Add the correct display in IE 9-.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">canvas</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Add the correct display in IE.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">template &#123;</span><br><span class="line"><span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Hidden</span></span><br><span class="line"><span class="comment">========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Add the correct display in IE 10-.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[hidden]</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
</search>
